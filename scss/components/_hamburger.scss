@layer components.hamburger {
	.hamburger {
		--hamburger-width: 1.875rem;
		--hamburger-gap: .3125rem;
		--hamburger-padding-inline: 0.4375rem;
		--hamburger-padding-block: 0.4375rem;
		--hamburger-padding: var(--hamburger-padding-block) var(--hamburger-padding-inline);
		
		--hamburger-line-width: 1.25rem;
		--hamburger-line-height: .125rem;

		$this: &;

		display: grid;
		align-content: center;
		justify-items: center;
		gap: var(--hamburger-gap);
		width: calc(var(--hamburger-padding-block)*2 + var(--hamburger-line-width));
		padding: var(--hamburger-padding);

		transform-origin: center;

		&__line {
			width: var(--hamburger-line-width);
			height: var(--hamburger-line-height);

			background-color: currentColor;

			border-radius: var(--hamburger-line-height);
		}

		&--cross-squeeze {
			position: relative;
			& {
				& #{$this}__line {
					@media (prefers-reduced-motion: no-preference) {
						transition: var(--base-transition);
						transition-property: color, translate, scale, rotate;
					}
				}
				&::before,
				&::after {
					position: absolute;
					// inset-block-start: calc(var(--hamburger-padding-block) + var(--hamburger-gap) + var(--hamburger-line-height));
					inset-block-start: calc(50% - (var(--hamburger-line-height) / 2));
					inset-inline-start: var(--hamburger-padding-inline);
					content: '';
					width: var(--hamburger-line-width);
					height: var(--hamburger-line-height);
		
					background-color: currentColor;
		
					border-radius: var(--hamburger-line-height);

					@media (prefers-reduced-motion: no-preference) {
						transition: var(--base-transition);
						transition-property: color, scale, rotate;
					}
				}
				&::before {
				}
				&::after {
				}
			}
			&:target,
			&:focus {
				& #{$this}__line {
					&:nth-child(1),
					&:nth-child(2),
					&:nth-child(3) {
						scale: 0 1;
					}
					&:nth-child(1) {
						translate: 0 calc(var(--hamburger-line-height) + var(--hamburger-gap));
					}
					&:nth-child(3) {
						translate: 0 calc((var(--hamburger-line-height) + var(--hamburger-gap)) * -1);
					}
				}
				&::before {
					rotate: 45deg;
				}
				&::after {
					rotate: -45deg;
				}
			}
		}
	}
}